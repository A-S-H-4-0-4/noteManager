// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://notesmanager_user:pbzZrJtB5xP6EhfEXtm6It5czyFLXwWs@dpg-cek8oskgqg4ekmeqtk8g-a.oregon-postgres.render.com/notesmanager"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  noteId        Int?
  accounts      Account[]
  sessions      Session[]
  notes         Notes[]
  //   linkAndImg    imgAndlink[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Notes {
  id        Int       @id @default(autoincrement())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  title     String    @db.VarChar(150)
  type      String    @db.VarChar(20)
  notes     String?
  imgLink   String?
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

// model imgAndlink {
//   id        Int       @id @default(autoincrement())
//   userId    String
//   title     String    @db.VarChar(150)
//   type      String    @db.VarChar(20)
//   imgLink   String?
//   link      String?
//   createdAt DateTime
//   updatedAt DateTime?
//   user      User      @relation(fields: [userId], references: [id])
// }
